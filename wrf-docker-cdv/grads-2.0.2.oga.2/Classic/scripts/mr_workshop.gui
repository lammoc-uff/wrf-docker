#  merra.gui - last revision: 7 January 2009
#
#  GrADS Athena GUI script for accessing MERRA workshop examples
#
#  How to invoke this script: to be called from merra.gui
#
#  --
#
# This script file has been placed in the public domain.
#
#.........................................................................

#
#  Create a separate window for this
#  ---------------------------------
   MakeWindow(mrstuff,"MERRA Workshop 2009");


# A "label" is an inactive widget which display some text, 
# e.g., an informative  title. The first argument, "root"
# in this case, is the name you give to the widget so that
# you can refer to it later on
# -------------------------------------------------------
  MakeLabel(mrroot,"MERRA Workshop 2009")

# Workshop scripts
# ----------------

  MakeMenu(andrew, "Andrew")
      MakeMenuItem(w1tit, andrew, "Browse Files",  Browse,   "../merra/Andrew/" )
      MakeMenuItem(w1mer, andrew, "  MERRA",    Cmd, "run ../merra/Andrew/Andrew_Landfall_MERRA.gs")
      MakeMenuItem(w1ana, andrew, "  MERRA ANA",    Cmd, "run ../merra/Andrew/Andrew_Landfall_ANAMERRA.gs")
      MakeMenuItem(w1nr2, andrew, "  NCEPR2",    Cmd, "run ../merra/Andrew/Andrew_Landfall_NCEPR2.gs")
      MakeMenuItem(w1nrr, andrew, "  NARR",    Cmd, "run ../merra/Andrew/Andrew_Landfall_NARR.gs")

  MakeMenu(budget, "Water Budget")
      MakeMenuItem(w2tit, budget, "Browse Files",  Browse,    "../merra/WaterBudget/" )
      MakeMenuItem(w2mwa, budget, "  1993 Local",    Cmd, "run ../merra/WaterBudget/1993_Midwest/qv_budget_local.gs")
      MakeMenuItem(w2mwb, budget, "  1993 Remote",    Cmd, "run ../merra/WaterBudget/1993_Midwest/qv_budget_remote.gs")
      MakeMenuItem(w2gla, budget, "  Global Local",    Cmd, "run ../merra/WaterBudget/Global/qv_budget_local.gs")
      MakeMenuItem(w2glb, budget, "  Global Remote",    Cmd, "run ../merra/WaterBudget/Global/qv_budget_remote.gs")
      MakeMenuItem(w2prea, budget, "  Pr Time Series",    Cmd, "run ../merra/WaterBudget/PrecipTimeSeries/precip_time_series.gs")
      MakeMenuItem(w2preb, budget, "  Pr Time Series SS",    Cmd, "run ../merra/WaterBudget/PrecipTimeSeries/precip_time_series_ss.gs")

  MakeMenu(energy, "Global Energy")
      MakeMenuItem(w3tit, energy, "Browse Files",  Browse,    "../merra/GlobalEnergy/" )
      MakeMenuItem(w3gb1, energy, "  1980",    Cmd, "run ../merra/GlobalEnergy/GlobalEnergyAnn2.gs 1980")
      MakeMenuItem(w3gb2, energy, "  Climate LONG",    Cmd, "run ../merra/GlobalEnergy/GlobalEnergy_Clim2.gs")
      MakeMenuItem(w3gb3, energy, "  Climate Serverside",    Cmd, "run ../merra/GlobalEnergy/GlobalEnergy_Clim2_serverside.gs")

  MakeMenu(prez, "Prez Day")
      MakeMenuItem(w4tit, prez, "Browse Files",  Browse,    "../merra/Feb1979/" )
      MakeMenuItem(w41730, prez, "  1730Z19FEB1979",    Cmd, "run ../merra/Feb1979/feb1979_eastcoast_1730.gs")
      MakeMenuItem(w4loop, prez, "  Cld SLP Loop",    Cmd, "run ../merra/Feb1979/feb1979_eastcoast_loop.gs")

  MakeMenu(regrid, "Regridding")
      MakeMenuItem(w5tit, regrid, "Browse Files",  Browse,    "../merra/RegridEx/regrid_example.gs" )
      MakeMenuItem(w5regr1, regrid, "  Regrid TCW",    Cmd, "run ../merra/RegridEx/regrid_example.gs 1")
      MakeMenuItem(w5regr2, regrid, "  Regrid SLP",    Cmd, "run ../merra/RegridEx/regrid_example.gs 2")

  MakeMenu(basins, "Basins")
      MakeMenuItem(w6tit, basins, "Browse Files",  Browse,    "../merra/RegionalBasins/" )
      MakeMenuItem(w6bmap, basins, "  Basin Map",    Cmd, "run ../merra/RegionalBasins/Basin_Map.gs")
      MakeMenuItem(w6atit, basins, "  Cloud Albedo Files",  Browse,    "../merra/RegionalBasins/ACld/" )
      MakeMenuItem(w6amad, basins, "    Madiera",    Cmd, "run ../merra/RegionalBasins/ACld/Madiera_CloudAlbedo.gs")
      MakeMenuItem(w6amads, basins, "    Madiera SWclr",    Cmd, "run ../merra/RegionalBasins/ACld/Madiera_SWclr.gs")
      MakeMenuItem(w6aohio, basins, "    Ohio",    Cmd, "run ../merra/RegionalBasins/ACld/Ohio_CloudAlbedo.gs")
      MakeMenuItem(w6aohios, basins, "    Ohio SWclr",    Cmd, "run ../merra/RegionalBasins/ACld/Ohio_SWclr.gs")
      MakeMenuItem(w6btit, basins, "  Daily LCL - Files",  Browse,    "../merra/RegionalBasins/Daily/" )
      MakeMenuItem(w6bmad, basins, "    Madiera LCL",    Cmd, "run ../merra/RegionalBasins/Daily/daily_Madiera_LCL.gs")
      MakeMenuItem(w6bmad2, basins, "    Madiera LCL-EF",    Cmd, "run ../merra/RegionalBasins/Daily/daily_Madiera_LCL-EF.gs")
      MakeMenuItem(w6bmis, basins, "    Missouri LCL",    Cmd, "run ../merra/RegionalBasins/Daily/daily_Missouri_LCL.gs")
      MakeMenuItem(w6bmis2, basins, "    Missouri LCL-Acld",    Cmd, "run ../merra/RegionalBasins/Daily/daily_Missouri_acloud_LCL.gs")
      MakeMenuItem(w6bohio, basins, "    Ohio LCL",    Cmd, "run ../merra/RegionalBasins/Daily/daily_Ohio_LCL.gs")
      MakeMenuItem(w6ctit, basins, "  Diurnal - Files",  Browse,    "../merra/RegionalBasins/Diurnal/" )
      MakeMenuItem(w6coef, basins, "    Ohio EF",    Cmd, "run ../merra/RegionalBasins/Diurnal/diurnal_Ohio_EF.gs")
      MakeMenuItem(w6colh, basins, "    Ohio LH",    Cmd, "run ../merra/RegionalBasins/Diurnal/diurnal_Ohio_Eflux.gs")
      MakeMenuItem(w6cots, basins, "    Ohio Tskin",    Cmd, "run ../merra/RegionalBasins/Diurnal/diurnal_Ohio_Ts.gs")
      MakeMenuItem(w6colcl, basins, "    Ohio LCL",    Cmd, "run ../merra/RegionalBasins/Diurnal/diurnal_Ohio_LCL.gs")
      MakeMenuItem(w6ccolts, basins, "    Colorado Tskin",    Cmd, "run ../merra/RegionalBasins/Diurnal/diurnal_Tskin_Colorado.gs")
      MakeMenuItem(w6cmadts, basins, "    Madiera Tskin",    Cmd, "run ../merra/RegionalBasins/Diurnal/diurnal_Tskin_Madiera.gs")

  MakeButton(close,  "Close", CloseWindow,  NULL )
#  MakeButton(help, "Help", Browse, "../merra/readme.txt")

# Once you define buttons and menus you may want to enforce their
# relative position. The very first button is always placed at the
# upper left corner.
# ----------------------------------------------------------------

  SetWidgetPos(andrew, PLACE_UNDER, mrroot, NO_CARE, NULL)
  SetWidgetPos(budget, PLACE_UNDER, mrroot, PLACE_RIGHT, andrew)
  SetWidgetPos(energy, PLACE_UNDER, mrroot, PLACE_RIGHT, budget)

  SetWidgetPos(regrid, PLACE_UNDER, andrew, NO_CARE, NULL)
  SetWidgetPos(basins, PLACE_UNDER, andrew, PLACE_RIGHT, regrid)
  SetWidgetPos(prez,   PLACE_UNDER, andrew, PLACE_RIGHT, basins)
  SetWidgetPos(close,  PLACE_UNDER, andrew, PLACE_RIGHT, prez)
#  SetWidgetPos(help,   PLACE_UNDER, andrew, PLACE_RIGHT, close)

# You can optionally select a font
# --------------------------------
  GetFont(dfont,"-*-helvetica-bold-o-normal--12-*-*-*-*-*-*-*" )
  GetFont(mrfont,"-*-helvetica-bold-o-normal--14-*-*-*-*-*-*-*" )
  SetWidgetFont(mrroot,mrfont)
  SetWidgetFont(andrew,dfont)
  SetWidgetFont(budget,dfont)
  SetWidgetFont(energy,dfont)
  SetWidgetFont(regrid,dfont)
  SetWidgetFont(basins,dfont)
  SetWidgetFont(prez,dfont)
  SetWidgetFont(close,dfont)

# In order to make your widgets appear on the screen you *must*
# issue this command.
# -------------------------------------------------------------
  ShowDisplay()
  
# After your widgets appear on the screen, you can set the color 
# of your widgets. The following colors are pre-defined:
# white, back, red, green, blue, yellow.
# --------------------------------------------------------------
  GetNamedColor(Blue2,"LightSteelBlue")
  SetFgColor(mrroot,red)
  SetBgColor(andrew,Blue2)
  SetBgColor(budget,Blue2)
  SetBgColor(energy,Blue2)
  SetBgColor(prez,Blue2)
  SetBgColor(regrid,Blue2)
  SetBgColor(basins,Blue2)
  SetBgColor(close,gray)
  SetBgColor(help,gray)

# Note: Do not call MainLoop() when you have used MakeWindow()

#........................................................................
#
# APPENDIX: Currently available callback functions
#
#     Browse    Opens a text file, such as a help file, on a separate
#               window.
#     Cmd       Executes a generic GrADS command
#     CmdStr    Like Cmd, but the user is prompted for an additional
#               string to be appended to the GrADS command.
#     CmdWin    Invokes a window for GrADS command line interface.
#               User can click on past commands from a list.
#     CmdLine   Invokes the standard GrADS command line interface.
#               When the command line is active the other widgets
#               are not available (may be fixed in the future).
# CloseWindow   Closes the current window (do not use for your primary
#               window or you will get stuck).
#     Display   A generic callback for displaying the current variable
#               (or expression) set with VarSel. The options are:
#                  <<    decrements time and executes display
#                 PLAY   starts animation from current to last time
#                DISPLAY just executes display
#                  >>    increments time and  executes display
#               If the "hold" toggle state is OFF (the default),
#               the screen is cleared before displaying.
#     Edit      Like browse, but the user can edit the file. This simple
#               text editor is integrated with GrADS, providing a very
#               elementary Integrated Development Enviroment (IDE) for
#               GrADS scripts. In particular, the script being edited
#               can be executed by clicking on a button (not
#               implemented yet).
#     FileSel   Pops up a scrollable list and asks the user to selected
#               a file among the currently opened GrADS files (including
#               SDFs). The selected file becomes the default.
#     Load      Pops up a "file finder" widget, and after the user
#               clicks on a file name it executes a GrADS command
#               specified as the last argument. In case of "open" or 
#               "sdfopen" the files becomes the default, and the
#               user is asked to select a variable from this file.
#     Open      Similar to Load, but the file name must be specified.
#     Toggle    Turn internal options ON/OFF. The only internal
#               option currently supported is "hold". This callback is
#               usually used with MakeToggle(), see example above.
#     VarSel    Pops up a scrollable list and asks the user to selected
#               a variable from the default file. The user can also
#               type a generic GrADS expression instead of selecting
#               a single variable.
#     NULL      Does not do anything, used for inactive buttons.
#
#........................................................................


